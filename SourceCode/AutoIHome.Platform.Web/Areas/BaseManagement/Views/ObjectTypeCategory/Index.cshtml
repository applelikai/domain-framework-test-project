@section scripts{
    <!--添加引用-->
    <script type="text/javascript" src="~/js/_references.js"></script>
    <!--查询展示-->
    <script type="text/javascript">
        //获取展示操作元素链接的局部页面名称
        function get_links_view_name() { return '@base.ViewBag.LinksViewName'; }
        //获取展示分部视图的url
        function get_url_for_show_view() { return '@Url.Action("ShowView")'; }
        //获取显示基础类型分类列表的url
        function get_url_for_object_type_categories() { return '@Url.Action("ShowListPagedObjectTypeCategories")'; }
        //获取显示基础类型分类详情的url
        function get_url_for_object_type_category() { return '@Url.Action("ShowDetailObjectTypeCategory")'; }
        //获取显示编辑基础类型分类的url
        function get_url_for_edit_object_type_category() { return '@Url.Action("ShowEditObjectTypeCategory")'; }

        //分页查询基础类型分类列表
        function search_object_type_categories(pageIndex, pageSize) {
            //创建Table分页加载对象
            let oTableLoader = new PageTableLoader('#main > div[data-name="main"] div[data-name="object-type-categories"]', 4);
            //指定查询url
            oTableLoader.url = get_url_for_object_type_categories();
            //指定查询参数
            oTableLoader.data = {
                searcher: $('#main > div[data-name="main"] form[role="search"]').serializeObject(),
                pageIndex: pageIndex,
                pageSize: pageSize,
                functionName: 'search_object_type_categories',
                linksViewName: get_links_view_name()
            };
            //加载数据
            oTableLoader.load();
        }
        //显示基础类型分类详情
        function show_object_type_category(categoryCode) {
            //创建容器对象
            let oContainer = new ModalContentContainer('#main', 'modal-content-0');
            //指定url
            oContainer.url = get_url_for_object_type_category();
            //指定参数
            oContainer.data = { categoryCode: categoryCode };
            //显示当前容器
            oContainer.show();
        }
        //显示新建基础类型分类
        function show_new_object_type_category() {
            //创建容器对象
            let oContainer = new ModalDialogFormContainer('div-modal-dialog-0');
            //指定url
            oContainer.url = get_url_for_show_view();
            //指定参数
            oContainer.data = {
                viewName: '_NewObjectTypeCategory',
                title: '新建基础类型分类'
            };
            //显示当前容器
            oContainer.show();
        }
        //显示编辑基础类型分类
        function show_edit_object_type_category(categoryCode) {
            //创建容器对象
            let oContainer = new ModalDialogFormContainer('div-modal-dialog-0');
            //指定url
            oContainer.url = get_url_for_edit_object_type_category();
            //指定参数
            oContainer.data = { categoryCode: categoryCode };
            //显示当前容器
            oContainer.show();
        }
    </script>
    <!--提交修改-->
    <script type="text/javascript">
        //获取添加基础类型分类的url
        function get_url_for_add_object_type_category() { return '@Url.Action("AddEntity")'; }
        //获取保存基础类型分类的url
        function get_url_for_save_object_type_category() { return '@Url.Action("SaveEntity")'; }
        //获取删除基础类型分类的url
        function get_url_for_remove_object_type_category() { return '@Url.Action("RemoveObjectTypeCategory")'; }

        //添加基础类型分类
        function add_object_type_category(form) {
            //创建表单提交对象
            let oSubmitter = new DataFormSubmitter(form);
            //指定提交地址
            oSubmitter.url = get_url_for_add_object_type_category();
            //指定执行成功后的回掉函数
            oSubmitter.call_back = function () {
                //重新查询
                search_object_type_categories(1);
                //关闭当前模态框
                close_dialog($(form).parents('.modal').get(0));
            };
            //执行提交
            oSubmitter.submit();
        }
        //保存基础类型分类
        function save_object_type_category(form) {
            //创建表单提交对象
            let oSubmitter = new DataFormSubmitter(form);
            //指定提交地址
            oSubmitter.url = get_url_for_save_object_type_category();
            //指定执行成功后的回掉函数
            oSubmitter.call_back = function () {
                //重新查询
                search_object_type_categories();
                //关闭当前模态框
                close_dialog($(form).parents('.modal').get(0));
            };
            //执行提交
            oSubmitter.submit();
        }
        //删除基础类型分类
        function remove_object_type_category(categoryCode) {
            //创建数据提交对象
            let oSubmitter = new DataSubmitter('确定删除当前分类吗?');
            //指定提交地址
            oSubmitter.url = get_url_for_remove_object_type_category();
            //指定参数
            oSubmitter.data = { categoryCode: categoryCode };
            //指定提交完成后的回掉函数
            oSubmitter.call_back = search_object_type_categories;
            //提交
            oSubmitter.submit();
        }
    </script>
    <!--基础类型-->
    <script type="text/javascript">
        //获取显示编辑基础类型列表的url
        function get_url_for_edit_object_types() { return '@Url.Action("ShowListEditObjectTypes", "ObjectType")'; }
        //获取显示基础类型列表的url
        function get_url_for_show_object_types() { return '@Url.Action("ShowListPagedObjectTypes", "ObjectType")'; }
        //获取显示基础类型详情的url
        function get_url_for_show_object_type() { return '@Url.Action("ShowDetailObjectType", "ObjectType")'; }
        //获取显示新建基础类型的url
        function get_url_for_new_object_type() { return '@Url.Action("ShowNewObjectType", "ObjectType")'; }
        //获取显示编辑基础类型的url
        function get_url_for_edit_object_type() { return '@Url.Action("ShowEditObjectType", "ObjectType")'; }
        //获取添加基础类型的url
        function get_url_for_add_object_type() { return '@Url.Action("AddEntity", "ObjectType")'; }
        //获取保存基础类型的url
        function get_url_for_save_object_type() { return '@Url.Action("SaveEntity", "ObjectType")'; }

        //显示编辑基础类型列表
        function show_edit_object_types(categoryCode) {
            //创建容器对象
            let oContainer = new ModalContentContainer('#main', 'modal-content-0');
            //指定url
            oContainer.url = get_url_for_edit_object_types();
            //指定参数
            oContainer.data = {
                categoryCode: categoryCode,
                pageIndex: 1,
                pageSize: 10,
                functionName: 'search_edit_object_types'
            };
            //显示当前容器
            oContainer.show();
        }
        //分页查询待编辑的基础类型列表
        function search_edit_object_types(pageIndex, pageSize) {
            //创建Table分页加载对象
            let oTableLoader = new PageTableLoader('#main > div[data-name="modal-content-0"] div[data-name="list"]', 5);
            //指定查询url
            oTableLoader.url = get_url_for_show_object_types();
            //指定查询参数
            oTableLoader.data = {
                categoryCode: document.querySelector('#main > div[data-name="modal-content-0"] nav input[name="CategoryCode"]').value,
                pageIndex: pageIndex,
                pageSize: pageSize,
                functionName: 'search_edit_object_types',
                linksViewName: '_LinkEditObjectType'
            };
            //加载数据
            oTableLoader.load();
        }
        //分页查询基础类型列表
        function search_object_types(pageIndex, pageSize) {
            //创建Table分页加载对象
            let oTableLoader = new PageTableLoader('#tab-pane-object-types', 5);
            //指定查询url
            oTableLoader.url = get_url_for_show_object_types();
            //指定查询参数
            oTableLoader.data = {
                categoryCode: document.querySelector('#tab-pane-object-type-category input[name="CategoryCode"]').value,
                pageIndex: pageIndex,
                pageSize: pageSize,
                functionName: 'search_object_types'
            };
            //加载数据
            oTableLoader.load();
        }
        //显示基础类型详情
        function show_object_type(typeId) {
            //创建容器对象
            let oContainer = new ModalDialogContainer('div-modal-dialog-0');
            //指定url
            oContainer.url = get_url_for_show_object_type();
            //指定参数
            oContainer.data = { typeId: typeId };
            //显示当前容器
            oContainer.show();
        }
        //显示新建基础类型
        function show_new_object_type(categoryCode) {
            //创建容器对象
            let oContainer = new ModalDialogFormContainer('div-modal-dialog-0');
            //指定url
            oContainer.url = get_url_for_new_object_type();
            //指定参数
            oContainer.data = { categoryCode: categoryCode };
            //显示当前容器
            oContainer.show();
        }
        //显示编辑基础类型
        function show_edit_object_type(typeId) {
            //创建容器对象
            let oContainer = new ModalDialogFormContainer('div-modal-dialog-0');
            //指定url
            oContainer.url = get_url_for_edit_object_type();
            //指定参数
            oContainer.data = { typeId: typeId };
            //显示当前容器
            oContainer.show();
        }

        //添加基础类型
        function add_object_type(form) {
            //创建表单提交对象
            let oSubmitter = new DataFormSubmitter(form);
            //指定提交地址
            oSubmitter.url = get_url_for_add_object_type();
            //指定执行成功后的回掉函数
            oSubmitter.call_back = function () {
                //重新查询
                search_edit_object_types(1);
                //关闭当前模态框
                close_dialog($(form).parents('.modal').get(0));
            };
            //执行提交
            oSubmitter.submit();
        }
        //保存基础类型
        function save_object_type(form) {
            //创建表单提交对象
            let oSubmitter = new DataFormSubmitter(form);
            //指定提交地址
            oSubmitter.url = get_url_for_save_object_type();
            //指定执行成功后的回掉函数
            oSubmitter.call_back = function () {
                //重新查询
                search_edit_object_types();
                //关闭当前模态框
                close_dialog($(form).parents('.modal').get(0));
            };
            //执行提交
            oSubmitter.submit();
        }
    </script>
    <!--初始化-->
    <script type="text/javascript">
        $(function () {
            //默认查询第一页的基础类型分类列表
            search_object_type_categories(1);
        })
    </script>
}
@section navigation{
    <li class="breadcrumb-item">
        <a asp-area="" asp-controller="Home" asp-action="Index">主页</a>
    </li>
    <li class="breadcrumb-item">基础数据</li>
    <li class="breadcrumb-item active" aria-current="page">@base.ViewData["Title"]</li>
}

<!--查询表单-->
<form class="bg-white pt-3 pb-3" role="search">
    <div class="row">
        <div class="col-md-4 row">
            <label class="col-md-4 col-form-label text-end">分类代码:</label>
            <div class="col-md-8">
                <input class="form-control" type="text" name="CategoryCode" />
            </div>
        </div>
        <div class="col-md-4 row">
            <label class="col-md-4 col-form-label text-end">分类名称:</label>
            <div class="col-md-8">
                <input class="form-control" type="text" name="CategoryName" />
            </div>
        </div>
        <div class="col-md-2">
            <primary-button click="search_object_type_categories(1);">
                <partial name="_ButtonTextSearch" />
            </primary-button>
            &nbsp;
            <primary-button click="show_new_object_type_category();">
                <partial name="_ButtonTextNew" />
            </primary-button>
        </div>
    </div>
</form>
<!--数据展示-->
<div class="bg-white w-100 mt-2 p-0" data-name="object-type-categories">
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>分类代码</th>
                <th>分类名称</th>
                <th>排序时间</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody></tbody>
        <tfoot>
            <tr>
                <td colspan="4">
                    <input type="hidden" name="PageSize" value="10" />
                    <input type="hidden" name="PageIndex" value="1" />
                </td>
            </tr>
        </tfoot>
    </table>
</div>