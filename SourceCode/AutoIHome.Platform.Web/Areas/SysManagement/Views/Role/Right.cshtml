@section style_libraries{
    <link rel="stylesheet" href="~/lib/jquery-miniui/themes/default/miniui.css" />
    <link rel="stylesheet" href="~/lib/jquery-miniui/themes/metro-blue/skin.css" />
}
@section script_libraries{
    <script type="text/javascript" src="~/lib/jquery-miniui/miniui.js"></script>
}
@section scripts{
    <!--添加引用-->
    <script type="text/javascript" src="~/js/_references.js"></script>
    <script type="text/javascript" src="~/lib/layui/layui.js"></script>
    <!--菜单-->
    <script type="text/javascript">
        //获取当前菜单下的子菜单列表
        function get_child_menus(liMenu) {
            //获取菜单li数组
            let arrayLiMenus = Array.from(liMenu.querySelectorAll('ul > li')).filter(function (liChildMenu) {
                return liChildMenu.getAttribute('data-name') != null && liChildMenu.getAttribute('data-type') != null;
            });
            //获取菜单数据项数组
            return arrayLiMenus.map(function (liChildMenu) {
                return {
                    type: liChildMenu.getAttribute('data-type'),
                    name: liChildMenu.getAttribute('data-name'),
                    title: liChildMenu.querySelector('a > span').textContent,
                    children: get_child_menus(liChildMenu)
                };
            });
        }
        //获取当前模块下的菜单列表
        function get_module_child_menus(moduleName) {
            //获取菜单li数组
            let arrayLiMenus = Array.from(document.querySelectorAll('#div-menus > ul[data-name="' + moduleName + '"] > li')).filter(function (liMenu) {
                return liMenu.getAttribute('data-name') != null && liMenu.getAttribute('data-type') != null;
            });
            //获取菜单数据项数组
            return arrayLiMenus.map(function (liMenu) {
                return {
                    type: liMenu.getAttribute('data-type'),
                    name: liMenu.getAttribute('data-name'),
                    title: liMenu.querySelector('a > span').textContent,
                    children: get_child_menus(liMenu)
                };
            });
        }
        //获取所有的模块菜单列表
        function get_module_menus() {
            //获取模块button数组
            let arrayBtnModules = Array.from(document.querySelectorAll('#div-modules > button'));
            //获取模块数据项数组
            return arrayBtnModules.map(function (btnModule) {
                //获取模块名称
                let sModuleName = btnModule.getAttribute('data-name');
                //获取数据项
                return {
                    type: 'module',
                    name: sModuleName,
                    title: btnModule.querySelector('span').textContent,
                    children: get_module_child_menus(sModuleName)
                };
            });
        }
        //加载菜单列表
        function load_menus() {
            //创建tree对象
            let tree = new mini.Tree(document.querySelector('#div-main > div[data-name="main"] div[data-name="tree-menus"]'));
            //指定选项
            tree.set({
                id: 'tree-menus',
                showTreeIcon: true,
                showCheckBox: true,
                idField: 'name',
                textField: 'title',
                nodesField: 'children'
            });
            //加载数据
            tree.loadData(get_module_menus());
        }
        //重新加载菜单列表
        function reload_menus() {
            //获取tree对象
            let tree = mini.get('tree-menus');
            //加载数据
            tree.loadData(get_module_menus());
        }
    </script>
    <!--查询展示-->
    <script type="text/javascript">
        //获取显示角色列表的url
        function get_url_for_show_roles() { return '@Url.Action("ShowListPagedRoles")'; }
        //获取角色授权菜单列表的url
        function get_url_for_role_menus() { return '@Url.Action("GetRoleMenus")'; }

        //分页查询角色列表
        function search_roles(pageIndex, pageSize) {
            //创建Table分页加载对象
            let oTableLoader = new PageTableLoader('#div-main > div[data-name="main"] div[data-name="roles"]', 4);
            //指定查询url
            oTableLoader.url = get_url_for_show_roles();
            //指定查询参数
            oTableLoader.data = {
                searcher: get_form_json('#div-main > div[data-name="main"] form[role="search"]'),
                pageIndex: pageIndex,
                pageSize: pageSize,
                functionName: 'search_roles',
                linksViewName: '_LinkSetRight'
            };
            //加载数据
            oTableLoader.load();
        }
        //加载当前角色的权限
        function load_role_right(roleId) {
            //加载当前角色下授权访问的菜单列表
            $.post(get_url_for_role_menus(), { roleId: roleId }, function (data, textStatus, jqXHR) {
                //打印log
                console.log(data);
                console.log(textStatus);
                //获取最终的菜单名称数组
                let arrayMenuNames = data.map(m => m.MenuName);
                //获取tree对象
                let tree = mini.get('tree-menus');
                //重新加载数据
                tree.loadData(get_module_menus());
                //选中当前角色有权限访问的菜单
                tree.checkNodes(arrayMenuNames);
            });
        }
        //加载当前角色信息
        function load_role(roleId, roleName) {
            //获取表单
            let form = document.querySelector('#div-main > div[data-name="main"] form[data-name="edit-right"]');
            //加载当前角色
            form.querySelector('input[name="RoleId"]').value = roleId;
            form.querySelector('input[name="RoleName"]').value = roleName;
            //加载当前角色授权访问的菜单列表
            load_role_right(roleId);
        }
    </script>
    <!--提交修改-->
    <script type="text/javascript">
        //获取授权角色菜单的url
        function get_url_for_set_role_menus() { return '@Url.Action("SetRoleMenus")'; }

        //获取选中的菜单的菜单数组
        function get_selected_menus() {
            //获取tree对象
            let tree = mini.get('tree-menus');
            //读取选中的菜单的菜单数组
            let arrayMenus = tree.getCheckedNodes(true).map(function (oMenu) {
                return {
                    MenuType: oMenu.type,
                    MenuName: oMenu.name
                }
            });
            //获取选中的菜单的菜单数组
            return arrayMenus;
        }
        //为当前角色授予菜单访问权限
        function set_role_menus() {
            //获取角色id
            let sRoleId = document.querySelector('#div-main > div[data-name="main"] form[data-name="edit-right"] input[name="RoleId"]').value;
            //创建数据提交对象
            let oSubmitter = new DataSubmitter('确定授予当前角色以下菜单的访问权限吗?');
            //指定提交地址
            oSubmitter.url = get_url_for_set_role_menus();
            //指定参数
            oSubmitter.data = {
                roleId: sRoleId,
                menus: get_selected_menus()
            };
            //指定提交完成后的回掉函数
            oSubmitter.call_back = function () {
                //加载当前角色的权限
                load_role_right(sRoleId);
            };
            //提交
            oSubmitter.submit();
        }
    </script>
    <!--初始化-->
    <script type="text/javascript">
        $(function () {
            //加载菜单列表
            load_menus();
            //默认查询第一页的角色列表
            search_roles(1);
        })
    </script>
}
@section navigation{
    <li class="breadcrumb-item">
        <a asp-area="" asp-controller="Home" asp-action="Index">主页</a>
    </li>
    <li class="breadcrumb-item">系统设置</li>
    <li class="breadcrumb-item active" aria-current="page">@base.ViewData["Title"]</li>
}

<div class="row h-100">
    <div class="col-md-7">
        <!--查询表单-->
        <form class="bg-white pt-3 pb-3" role="search">
            <div class="row">
                <div class="col-md-6 row">
                    <label class="col-md-4 col-form-label text-end">角色名称:</label>
                    <div class="col-md-8">
                        <input class="form-control" type="text" name="SearchName" />
                    </div>
                </div>
                <div class="col-md-2">
                    <primary-button click="search_roles(1);">
                        <partial name="_ButtonTextSearch" />
                    </primary-button>
                </div>
            </div>
        </form>
        <!--数据展示-->
        <div class="bg-white w-100 mt-2 p-0" data-name="roles">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>角色名称</th>
                        <th>备注</th>
                        <th>录入时间</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                    <tr>
                        <td colspan="4">
                            <input type="hidden" name="PageSize" value="10" />
                            <input type="hidden" name="PageIndex" value="1" />
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="col-md-5 h-100">
        <!--编辑权限表单-->
        <form class="bg-white pt-3 pb-3" data-name="edit-right">
            <div class="row">
                <div class="col-md-8 row">
                    <label class="col-md-4 col-form-label text-end">当前角色:</label>
                    <div class="col-md-8">
                        <input class="form-control" type="text" name="RoleName" readonly />
                    </div>
                </div>
                <div class="col-md-4">
                    <primary-button click="set_role_menus();">授权</primary-button>
                    &nbsp;
                    <primary-button click="reload_menus();">清空</primary-button>
                </div>
            </div>
            <!--隐藏变量-->
            <input type="hidden" name="RoleId" />
        </form>
        <!--菜单展示-->
        <div class="bg-white w-100 mt-2 p-0 overflow-scroll-y" style="height:80%;">
            <div data-name="tree-menus"></div>
        </div>
    </div>
</div>